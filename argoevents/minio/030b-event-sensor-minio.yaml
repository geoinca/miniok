apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: minio
spec:
  template:
    serviceAccountName: argo-events-sa
  dependencies:
    - name: test-dep
      eventSourceName: minio
      eventName: example
  triggers:
    - template:
        name: minio-workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              # apiVersion: argoproj.io/v1alpha1
              # kind: Workflow
              # metadata:
              #   generateName: hello-world-
              # spec:
              #   entrypoint: whalesay          # invoke the whalesay template
              #   templates:
              #   - name: whalesay              # name of the template
              #     container:
              #       image: geoincaks/whalesay:0.1.1
              #       command: [sh, -c]
              #       args: ["cowsay -f tux statis A "]
              #       resources:                # limit the resources
              #         limits:
              #           memory: 32Mi
              #           cpu: 100m
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow                  # new type of k8s spec
              metadata:
                generateName: hello-world-    # name of the workflow spec
              spec:
                entrypoint: whalesay          # invoke the whalesay template
                templates:
                - name: whalesay              # name of the template
                  container:
                    image: geoincaks/pythonimg:0.1.5
                    command: [sh,c]
                    args: [python3 00countobj.py 'AKIAIOSFODNN7EXAMPLE' 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'  'http://argo-artifacts.argo:9000' 'infolder' ,""]
                    resources:                # limit the resources
                      limits:
                        memory: 32Mi
                        cpu: 100m

          #The container args from the workflow are overridden by the s3 notification key
          parameters:
            - src:
                dependencyName: test-dep
                dataKey: notification.0.s3.object.key
                #dataKey: python3 00countobj.py 'AKIAIOSFODNN7EXAMPLE' 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'  'http://argo-artifacts.argo:9000' 'infolder'
              dest: spec.templates.0.container.args.0