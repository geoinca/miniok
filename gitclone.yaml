apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: argo-workflow-
spec:
  activeDeadlineSeconds: 300 # timeout after 5 minutes
  ttlSecondsAfterFinished: 10 # drop k8s resources after 10 seconds
  entrypoint: main
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  templates:
  - name: main
    steps:
    - - name: git-clone
        template: git-clone
    - - name: upload-to-minio
        template: upload-to-minio
  - name: git-clone
    inputs:
      artifacts:
      - name: argo-source
        path: /src
        git:
          repo: https://github.com/kintohub/node-examples.git
          revision: "master"
    container:
      image: node:8.9-alpine
      command: [sh, -c]
      args: ["npm install && mv /src/* ."]
      volumeMounts:
        - name: workdir
          mountPath: /build
      workingDir: /build
    metadata:
      labels:
        step: build-app
  - name: upload-to-minio
    container:
      image: minio/mc:RELEASE.2018-06-22T23-32-12Z
      command: [sh, -c]
      args: [ "mc config host add k8s http://${MINIO_HOST} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}  && mc mb --ignore-existing k8s/artifacts && mc cp -r * k8s/artifacts || exit 1" ]
      env:
      - name: "MINIO_ACCESS_KEY"
        valueFrom:
          secretKeyRef:
            name: minio-credentials
            key: accessKey
      - name: "MINIO_SECRET_KEY"
        valueFrom:
          secretKeyRef:
            name: minio-credentials
            key: secretKey
      - name: "MINIO_HOST"
        value: "minio:9000"
      volumeMounts:
        - name: workdir
          mountPath: /build
      workingDir: /build
    metadata:
      labels:
        step: upload-to-minio