apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: coinflip-
spec:
  entrypoint: coinflip
  templates:
  - name: coinflip
    steps:
    # flip a coin
    - - name: flip-coin
        template: flip-coin
    # evaluate the result in parallel
    - - name: doNothing
        template: doNothing                 # call donothing template if "donothing "
        when: "{{steps.flip-coin.outputs.result}} == 0"
      - name: faceAlignment
        template: faceAlignment                 # call faceAlignment template if "faceAlignment"
        when: "{{steps.flip-coin.outputs.result}} == 1"
      - name: warpImages
        template: warpImages                 # call warpImages template if "warpImages"
        when: "{{steps.flip-coin.outputs.result}} == 2"        
      - name: panorama
        template: panorama                 # call PANORAMA template if "PANORAMA"
        when: "{{steps.flip-coin.outputs.result}} > 2"        


  # Return doNothing, bgr2Gray, warpImages, panorama based on a number of items in the bucket
  - name: flip-coin
    script:
      image: geoincaks/pythonimg:0.1.5
      command: [sh, -c]
      args: [python3 00countobj.py 'AKIAIOSFODNN7EXAMPLE' 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'  'http://argo-artifacts:9000' 'infolder']

  - name: doNothing
    container:
      image: alpine:3.6
      command: [sh, -c]
      args: ["echo \"it was donothing\""]

  - name: faceAlignment
    container:
      image: geoincaks/pythonfacealignment:0.1.6
      command: [sh, -c]
      args: [python3 01facealignment.py 'AKIAIOSFODNN7EXAMPLE' 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'  'http://argo-artifacts:9000' 'infolder' 'outfolder']

  - name: warpImages
    container:
      image: geoincaks/pythonwarpimg:0.1.2
      command: [sh, -c]
      args: [python3 02warp2img.py 'AKIAIOSFODNN7EXAMPLE' 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'  'http://argo-artifacts:9000' 'infolder' 'outfolder']      

  - name: panorama
    container:
      image: alpine:3.6
      command: [sh, -c]
      args: ["echo \"it was panorama\""]       