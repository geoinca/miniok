apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: coinflip-
spec:
  entrypoint: coinflip
  templates:
  - name: coinflip
    steps:
    # flip a coin
    - - name: flip-coin
        template: flip-coin
    # evaluate the result in parallel
    - - name: doNothing
        template: doNothing                 # call donothing template if "donothing "
        when: "{{steps.flip-coin.outputs.result}} == 0"
      - name: bgr2Gray
        template: bgr2Gray                 # call bgr2Gray template if "bgr2Gray"
        when: "{{steps.flip-coin.outputs.result}} == 1"
      - name: warpImages
        template: warpImages                 # call warpImages template if "warpImages"
        when: "{{steps.flip-coin.outputs.result}} == 2"        
      - name: panorama
        template: panorama                 # call PANORAMA template if "PANORAMA"
        when: "{{steps.flip-coin.outputs.result}} > 2"        


  # Return doNothing, bgr2Gray, warpImages, panorama based on a number of items in the bucket
  - name: flip-coin
    script:
      image: geoincaks/pythonimg:0.1.2
      command: [python3]
      source: |
        import boto3
        from botocore.client import Config

        S3_ACCESS_KEY = 'tfq0M5o1QtNOJcP1nizr'
        S3_SECRET_KEY = 'HbO5COQOXR6z3P0jgTVCBzWxkXFPXKsMqoItRzL6'

        s3 = boto3.resource('s3',
                            endpoint_url='http://argo-artifacts:9000',
                            aws_access_key_id='tfq0M5o1QtNOJcP1nizr',
                            aws_secret_access_key='HbO5COQOXR6z3P0jgTVCBzWxkXFPXKsMqoItRzL6',
                            config=Config(signature_version='s3v4'),
                            region_name='us-east-1')

        my_bucket = s3.Bucket('infolder')
        result=0
        for object_summary in my_bucket.objects.filter(Prefix=""):
            result+=1
          
        print (result)

  - name: doNothing
    container:
      image: alpine:3.6
      command: [sh, -c]
      args: ["echo \"it was donothing\""]

  - name: bgr2Gray
    container:
      image: alpine:3.6
      command: [sh, -c]
      args: ["echo \"it was BGR2GRAY\""]

  - name: warpImages
    container:
      image: alpine:3.6
      command: [sh, -c]
      args: ["echo \"it was warpImages\""]      

  - name: panorama
    container:
      image: alpine:3.6
      command: [sh, -c]
      args: ["echo \"it was panorama\""]       